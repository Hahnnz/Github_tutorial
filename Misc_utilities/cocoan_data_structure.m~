function out = cocoan_data_structure(project_name, basedir)

% This function will create data structure in our workstation computer. 
%
% :Usage:
% ::
%
%    out = cocoan_data_structure(project_name, basedir)
%
% :Inputs:
%
%   **project_name:**
%        project name (e.g., 'Pleasure')
%
%   **basedir:**
%        base directory (e.g., '/Volumes/cocoanlab/sein_sync')
%
% :Optional Inputs: Enter keyword followed by variable with values
%
%   **'create':**
%        With this option, this function will actually create the directories.         
%        Thus, without this optional input, it will just show the names of the
%        directories it will create (i.e., 'dry run' is the default)
%
%   **'dry_run' (default):**
%        This will just show the names of the directories it will create 
%
% :Examples:
% ::
%    % inputs
%    project_name = 'Pleasure';
%    basedir = '/Volumes/cocoanlab/sein_sync';
%    out = cocoan_data_structure(project_name, basedir); % dry_run!!!
%    
%    % After you check all the directories are correct
%    out = cocoan_data_structure(project_name, basedir, 'create');
%
% ..
% Copyright (C) 04/07/2018, Choong-Wan Woo, Cocoan Lab
% ..

% Programmers' notes:
%

dry_run = true;

for i = 1:length(varargin)
    if ischar(varargin{i})
        switch varargin{i}
            % functional commands
            case {'create'}
                dry_run = false;
            case {'dry_run'}
                dry_run = true;
        end
    end
end

line = '-----------------------------------------------------------------';

disp(line);
disp('   Directory checking...');
disp(line);

if ~exist(fullfile(basedir, 'Data'), 'dir')
    error('\nThe directory %s does not exist!!! Please check!!!', fullfile(basedir, 'Data'));
end

if ~exist(fullfile(basedir, 'Projects'), 'dir')
    error('\nThe directory %s does not exist!!! Please check!!!', fullfile(basedir, 'Projects'));
end

data_dir{1} = fullfile(basedir, 'Data', project_name);
data_dir{2} = fullfile(basedir, 'Data', project_name, 'imaging');
data_dir{3} = fullfile(basedir, 'Data', project_name, 'imaging', 'preproc_script');
data_dir{4} = fullfile(basedir, 'Data', project_name, 'imaging', 'dicom_from_scanner');
data_dir{5} = fullfile(basedir, 'Data', project_name, 'behavioral');
data_dir{6} = fullfile(basedir, 'Data', project_name, 'behavioral', 'raw');
data_dir{7} = fullfile(basedir, 'Data', project_name, 'behavioral', 'preprocessed');
data_dir{8} = fullfile(basedir, 'Data', project_name, 'physio', 'raw');
data_dir{9} = fullfile(basedir, 'Data', project_name, 'physio', 'preprocessed');
data_dir{10} = fullfile(basedir, 'Data', project_name, 'audiovideo');
data_dir{11} = fullfile(basedir, 'Data', project_name, 'metadata');
data_dir{12} = fullfile(basedir, 'Data', project_name, 'documents');

proj_dir{1} = fullfile(basedir, 'Projects', project_name);
proj_dir{1} = fullfile(basedir, 'Projects', project_name, 'writing');
proj_dir{1} = fullfile(basedir, 'Projects', project_name, 'literature');
proj_dir{1} = fullfile(basedir, 'Projects', project_name, 'data');
proj_dir{1} = fullfile(basedir, 'Projects', project_name, 'scripts');
proj_dir{1} = fullfile(basedir, 'Projects', project_name);



end